* {
    box-sizing: border-box;
  }
  
  /* 
    These rules apply to actual HTML elements with no labelling!
    So: they style the tags directly
  */
  
  html {
    background-color: #FEFAE0;
    font-size: 16px;
    min-width: 300px;
    overflow-x: hidden;
    overflow-y: scroll;
  
    /* these are specific to different browsers */
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    text-size-adjust: 100%;
  }
  
  body {
    margin: 0;
    padding: 0;
  
    font-family: 'IBM Plex Mono';
    font-weight: 400;
    line-height: 1.5;
    background-color: #283618;
  }
  
  a {
    display: inline-block;
    text-decoration: none;
  }
  
  h2, h3 {
    margin:0;
    padding:0;
    padding-bottom:1.5rem;
    align-items: center;
  }
  
  form {
    accent-color: hsla(120, 100%, 50%, 0.482);
  }
  
  /*
    - These styles use 'class names'
    - You can apply them by using the 'class' attribute on your HTML
    - like this: <div class="wrapper">
    - note that the period vanishes there!
  */
  
  .wrapper {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    margin: 0;
    flex: 1;
  }
  
  .container {
    margin: 0 20px;
    display: flex;
    justify-content: space-evenly;
    align-items: start;
    flex:1;
  }
  
  /*
    This rule implies that the H1 tag lives within another HTML tag
    It "inherits" some rules from the above
    Those rules won't apply to an h1 that's outside a block with the class of 'header'
  */
  
  .header h1 {
    display: block;
    /* this will push other blocks out of the way */
  
    /* colors */
    background-color: #283618;
    color: #FEFAE0;
  
    /* shapes */
    border-radius: 6px;
    font-size: 1.5rem;
    padding: 1.25rem;
    margin: 0; /* margin = 0, the header pins to the top if we move */
  
  
    /* box-shadows are fancy */
    box-shadow: 0 2em 1em -0.9em rgb(10 10 10 / 10%), 0 0 0 1px rgb(10 10 10 / 2%);

    border-radius: 4px;
  }
  
  
  /*
    Rules can be combined on a block to apply the 'cascade' in order
    So you can use two classnames in a single class attribute
    like: <div class="box section">
  
    Rules may combine in unexpected ways - remember that the LAST thing written in this file will have "priority"
    And will be what displays in your client
  */
  
  .box {
    background-color: #283618;
    border-radius: 4px;
  
    width: fit-content;
    height:fit-content;
    padding: 1.5rem;
    margin: 0 auto;
  }
  
  .left_section {
    background-color: #606C38;
    flex: 0 1 auto;
    margin: 1rem;
    padding: 1.5rem;
  }
  
  .right_section {
    background-color: #606C38;
    flex: 1 2 auto;
    margin: 1rem;
    align-items: center;
    display: flex;
    flex-direction: column;
  }
  
  .subtitle {
    color: #FEFAE0;
    margin: 0px;
    margin-bottom: 5px;
  }
  
  /* Carousel */
  div.carousel {
    max-width: 300px;
    overflow: hidden;
    text-align: center;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    margin: 0 auto;
    margin-bottom: 1rem;
  }
  
  .carousel .slides {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
  }
  
  /* .carousel_item, */
  .hidden {
    display: none;
  }
  
  .visible {
    display: block;
  }
  
  .carousel_item img {
    /* 
      Setting width, rather than max-width or min-width,
      means annoying pop-ins won't happen
      but it also means you need to format your images to be compatible
      or they will stretch weird
  
      - try a tall one and see what happens
      - change the height on a fixed image size and see what happens
      - now make sure that images are _always_ square
      - ... there's a reason crop tools are popular in image editors
     */
    width: 150px; 
  }
  
  .prev,
  .next {
    border: none;
    margin: 2px;
    text-align: center;
    border-radius: 5px;
    font-weight: bold;
    height: 45px;
    padding: 10px;
    line-height: 0; /* This centers a button's text! */
    border: 2px solid rgb(99,99,99); /* shorthand for how to do a border */
  }
  

  .bot {
    max-width: 300px;
    overflow: hidden;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1rem;

    flex: 1 2 auto;
    margin: 1rem;
    align-items: center;
    display: flex;
    flex-direction: column;
  }
  
  /*
  Form Styles
  */
  
  form input {
    /* This is a hack to make sure our boxes line up with one another nicely */
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;
  
    /* here we are setting white space correctly */
    margin-bottom: 1rem;
    height: 2rem;
    border-radius: 4px;
  }
  
  form label {
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;
    align-items: flex-start;
  
    display: block; /* this turns the label text into a box we can set margins on */
    margin-bottom: 0.5rem;
  }
  
  /* How To Write A Media Query For Small Screens */
  
  @media only screen and (max-width: 736px){
    /* Rules in here will only apply when a screen is the correct size */
    /* check it out by using your developer tools to shrink your screen-size */
    .container {
      background-color: #FEFAE0;
      flex-direction: column; 
      justify-content: center;
      align-items: center;
    }
  
    .right_section {
      flex: 1 1 auto;
      justify-content: flex-start;
    }
  
    .left_section {
      flex: 1 1 auto;
    }
  
    .box {
      width: 100%;
      width: -moz-available;          /* WebKit-based browsers will ignore this. */
      width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
      width: fill-available;
      align-items: flex-start;  
    }
}
  
  